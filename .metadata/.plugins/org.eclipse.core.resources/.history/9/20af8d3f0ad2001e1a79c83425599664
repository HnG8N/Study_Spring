package com.springlec.base.contorller;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import com.google.gson.Gson;

@Controller
public class UploadController {

    // 이미지를 업로드할 디렉토리 경로
    public static String UPLOAD_DIRECTORY = System.getProperty("user.dir") + "/src/main/webapp/WEB-INF/images";

    @Autowired
    Gson gson; // Gson 객체를 주입받음
    
    // 이미지 업로드 폼을 보여주는 GET 요청 처리
    @GetMapping("/uploadimage")
    public String displayUploadForm() {
        return "images-upload-test"; // 업로드 폼 페이지 이름 반환
    }

    // 이미지를 업로드하는 POST 요청 처리
    @PostMapping("/upload")
    @ResponseBody
    public String uploadImage(Model model,
                              @RequestParam("image") MultipartFile file,
                              @RequestParam("textParam") String textParam) throws IOException {
        // 파일 이름 중복 방지를 위해 UUID 사용하여 고유한 이름 생성
        String uniqueFileName = UUID.randomUUID().toString() + "_" + file.getOriginalFilename();
        // 업로드된 이미지 파일의 경로 및 파일 이름 생성
        Path fileNameAndPath = Paths.get(UPLOAD_DIRECTORY, uniqueFileName);
        Files.write(fileNameAndPath, file.getBytes()); // 파일을 실제로 업로드
        
        model.addAttribute("msg", "Uploaded images: " + uniqueFileName); // 모델에 메시지 추가
        System.out.println("Uploaded images: " + uniqueFileName); // 콘솔에 업로드된 이미지 파일 이름 출력
        System.out.println("Text parameter: " + textParam); // 콘솔에 전달된 텍스트 파라미터 출력
        
        // Gson을 사용하여 데이터를 JSON 형식으로 변환
        List<String> Data = Arrays.asList("1234", "가나다라", "abcd");
        String JsonData = gson.toJson(Data);
        
        return JsonData; // JSON 형식의 데이터 반환
    }
}
